{"ast":null,"code":"var _jsxFileName = \"/home/davide/Desktop/recoilize-landing-page/src/Components/TvShowDetails.tsx\";\nimport React, { Suspense } from \"react\";\nimport { useRecoilValue } from 'recoil';\nimport { getTvDataResource, getCommentsResource } from \"./helpers/Api\";\nimport { Spinner } from \"./Spinner\";\nimport * as atoms from './Store/Atoms';\n\nconst Comments = () => {\n  const id = useRecoilValue(atoms.id);\n  const commentsResource = getCommentsResource(id).read();\n  const comments = commentsResource.map(comment => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment\",\n    key: comment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, comment.title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, comment.text)));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-col comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, \"Comments\"), comments);\n};\n\nconst Details = () => {\n  const id = useRecoilValue(atoms.id);\n  const tvShowResource = getTvDataResource(id).read();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, tvShowResource.name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, tvShowResource.description)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `https://res.cloudinary.com/dqsubx7oc/image/upload/w_200/v1582908284/tv-shows/${id}.jpg`,\n    alt: tvShowResource.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport const TvShowDetails = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tvshow-details\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Details, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 29\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Comments, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }))));\n};","map":{"version":3,"sources":["/home/davide/Desktop/recoilize-landing-page/src/Components/TvShowDetails.tsx"],"names":["React","Suspense","useRecoilValue","getTvDataResource","getCommentsResource","Spinner","atoms","Comments","id","commentsResource","read","comments","map","comment","title","text","Details","tvShowResource","name","description","TvShowDetails"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,cAAR,QAA6B,QAA7B;AACA,SAASC,iBAAT,EAA4BC,mBAA5B,QAAuD,eAAvD;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,eAAvB;;AAGA,MAAMC,QAAQ,GAAG,MAAM;AAErB,QAAMC,EAAE,GAAGN,cAAc,CAACI,KAAK,CAACE,EAAP,CAAzB;AAEA,QAAMC,gBAAgB,GAAGL,mBAAmB,CAACI,EAAD,CAAnB,CAAwBE,IAAxB,EAAzB;AACA,QAAMC,QAAQ,GAAGF,gBAAgB,CAACG,GAAjB,CAAqBC,OAAO,iBAC3C;AAAK,IAAA,SAAS,EAAC,SAAf;AAAyB,IAAA,GAAG,EAAEA,OAAO,CAACL,EAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKK,OAAO,CAACC,KAAb,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBD,OAAO,CAACE,IAA/B,CAFF,CADe,CAAjB;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGJ,QAFH,CADF;AAMD,CAlBD;;AAoBA,MAAMK,OAAO,GAAG,MAAM;AAEpB,QAAMR,EAAE,GAAGN,cAAc,CAACI,KAAK,CAACE,EAAP,CAAzB;AAEA,QAAMS,cAAc,GAAGd,iBAAiB,CAACK,EAAD,CAAjB,CAAsBE,IAAtB,EAAvB;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKO,cAAc,CAACC,IAApB,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0BD,cAAc,CAACE,WAAzC,CAFF,CADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAG,gFAA+EX,EAAG,MAD1F;AAEE,IAAA,GAAG,EAAES,cAAc,CAACC,IAFtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,CADF;AAcD,CAnBD;;AAqBA,OAAO,MAAME,aAAa,GAAG,MAAM;AAGjC,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,eAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,QAAD;AAAU,IAAA,QAAQ,eAAE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,CADF;AAYD,CAfM","sourcesContent":["import React, { Suspense } from \"react\";\nimport {useRecoilValue} from 'recoil';\nimport { getTvDataResource, getCommentsResource } from \"./helpers/Api\";\nimport { Spinner } from \"./Spinner\";\nimport * as atoms from './Store/Atoms';\n\n\nconst Comments = () => {\n\n  const id = useRecoilValue(atoms.id);\n\n  const commentsResource = getCommentsResource(id).read();\n  const comments = commentsResource.map(comment => (\n    <div className=\"comment\" key={comment.id}>\n      <h4>{comment.title}</h4>\n      <div className=\"text\">{comment.text}</div>\n    </div>\n  ));\n\n  return (\n    <div className=\"flex flex-col comments\">\n      <h3>Comments</h3>\n      {comments}\n    </div>\n  );\n};\n\nconst Details = () => {\n\n  const id = useRecoilValue(atoms.id);\n\n  const tvShowResource = getTvDataResource(id).read();\n  return (\n    <div className=\"flex\">\n      <div>\n        <h2>{tvShowResource.name}</h2>\n        <div className=\"details\">{tvShowResource.description}</div>\n      </div>\n      <div>\n        <img\n          src={`https://res.cloudinary.com/dqsubx7oc/image/upload/w_200/v1582908284/tv-shows/${id}.jpg`}\n          alt={tvShowResource.name}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport const TvShowDetails = () => {\n\n\n  return (\n    <div className=\"tvshow-details\">\n      <Suspense fallback={<Spinner />}>\n        <Details/>\n        <Suspense fallback={<Spinner />}>\n          <Comments/>\n        </Suspense>\n      </Suspense>\n    </div>\n  );\n\n  \n};\n"]},"metadata":{},"sourceType":"module"}