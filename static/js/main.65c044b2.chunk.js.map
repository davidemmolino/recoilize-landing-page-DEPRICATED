{"version":3,"sources":["assets/github-logo.svg","assets/linkedin-logo.svg","Components/Navbar.tsx","assets/recoilize-gray-01.png","Components/LandingPage.tsx","assets/demo1.gif","Components/TimeTravelSection.tsx","Components/Footer.tsx","Components/Spinner.tsx","Components/helpers/wrapPromise.tsx","Components/helpers/data.tsx","Components/helpers/Api.tsx","Components/Store/Atoms.tsx","Components/TvShowList.tsx","Components/TvShowDetails.tsx","Components/Playground.tsx","Components/PlaygroundSection.tsx","assets/interpolate.gif","Components/ToggleSection.tsx","App.tsx","index.tsx"],"names":["module","exports","Navbar","className","href","target","id","src","Linkedin","alt","Github","LandingPage","Logo","TimeTravelSection","data-scroll","TimeTravelGif","Footer","Spinner","style","margin","background","display","shapeRendering","width","height","viewBox","preserveAspectRatio","cx","cy","r","strokeWidth","stroke","strokeDasharray","fill","strokeLinecap","transform","attributeName","type","repeatCount","dur","keyTimes","values","wrapPromise","promise","result","status","suspender","then","e","read","tvMetadata","name","score","tvData","1","description","2","3","4","5","6","7","8","9","10","comments","title","text","tvMetadataApi","memoize","Promise","resolve","setTimeout","tvDataApi","API_TIMEOUT","commentsApi","sort","a","b","Math","random","getTvMetadataResource","getTvDataResource","getCommentsResource","atom","key","default","TvShowList","useRecoilState","atoms","setId","tvshows","map","item","onClick","newId","Comments","useRecoilValue","comment","Details","tvShowResource","TvShowDetails","fallback","Playground","PlaygroundSection","ToggleGif","App","root","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.65c044b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/github-logo.1bb02710.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin-logo.8cc2d3a8.svg\";","import '../index.css';\nimport React from 'react';\nimport Github from '../assets/github-logo.svg';\nimport Linkedin from '../assets/linkedin-logo.svg';\n// import { FaGithub } from 'react-icons/fa';\n// import { FaLinkedin } from 'react-icons/fa';\n// {`${FaLinkedin}`}\n// {`${FaGithub}`}\n\nexport default function Navbar() {\n    return (  \n        <div className=\"fade-in\">  \n                <ul>\n                    <li><a href=\"https://www.google.com\">Team</a></li>\n                    <li><a href=\"#hash-ancor\">Playground</a></li>\n                </ul>\n                <ul>\n                    {/* fix the links, these should go to the corresponding social media site */}\n                    <li><a href=\"https://www.linkedin.com/company/recoilize/\" target='_blank'><img id=\"linkedin-logo\" src={ Linkedin }alt=\"link to linkedin\"/></a></li>\n                    <li><a href=\"https://github.com/open-source-labs/Recoilize\" target='_blank'><img id=\"github-logo\" src={ Github } alt=\"link to github\"/></a></li>\n                </ul>\n        </div>\n    )\n}\n    ","export default __webpack_public_path__ + \"static/media/recoilize-gray-01.75757e59.png\";","import React from 'react';\nimport Logo from '../assets/recoilize-gray-01.png';\n\nexport default function LandingPage() {\n    return (\n        <div id=\"landing\" className=\"fade-in\">\n            <img src={Logo} alt=\"Recoilize logo\"/>\n            <div>\n                <h1>Recoilize 1.0</h1>\n                <h2 id='italic'>What is Recoilize all about?</h2>\n            </div>\n            <h2 className=\"fade-in-later\">Recoilize is a Chrome Dev Tool meant for debugging applications built with the experimental Recoil.js state management library.\n            <br/>\n            <br/>\n            The tool records Recoil state and allows users to easily debug their applications with features such as visualization of the component graph <br/>\n            and time traveling to previous states.</h2>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/demo1.b9094b36.gif\";","import React from 'react';\nimport TimeTravelGif from '../assets/demo1.gif';\n// import Scrollout from 'scroll-out';\n\nexport default function TimeTravelSection() {\n    return (\n        <div data-scroll id=\"time-travel-div\">\n            {/* fix the formatting of this */}\n            <h2 className=\"section-title-left\">#TimeTravelDebugging</h2>\n            <div id=\"timetravel-container\">\n                <div>\n                    <img src={ TimeTravelGif } alt=\"GIF demonstrating time travel dubugging\"/>\n                </div>\n                <div>\n                    <h2>Innovative debugging tool made specifically for Recoil</h2>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\n\nexport default function Footer() {\n    return (\n        <div >\n            <h2 className=\"section-title-right\">#Meet the team</h2>\n        </div>\n    )\n}","import React from \"react\";\n\nexport const Spinner = () => (\n  <div>\n    <svg\n      style={{\n        margin: \"auto\",\n        background: \"transparent\",\n        display: \"block\",\n        shapeRendering: \"auto\",\n        width: \"200px\",\n        height: \"200px\"\n      }}\n      viewBox=\"0 0 100 100\"\n      preserveAspectRatio=\"xMidYMid\"\n    >\n      <circle\n        cx=\"50\"\n        cy=\"50\"\n        r=\"32\"\n        strokeWidth=\"8\"\n        stroke=\"#3c0f0f\"\n        strokeDasharray=\"50.26548245743669 50.26548245743669\"\n        fill=\"none\"\n        strokeLinecap=\"round\"\n        transform=\"rotate(101.646 50 50)\"\n      >\n        <animateTransform\n          attributeName=\"transform\"\n          type=\"rotate\"\n          repeatCount=\"indefinite\"\n          dur=\"1s\"\n          keyTimes=\"0;1\"\n          values=\"0 50 50;360 50 50\"\n        />\n      </circle>\n    </svg>\n  </div>\n);\n","export const wrapPromise = promise => {\n    let status = \"pending\";\n    let result;\n    let suspender = promise.then(\n      r => {\n        status = \"success\";\n        result = r;\n      },\n      e => {\n        status = \"error\";\n        result = e;\n      }\n    );\n    return {\n      read() {\n        if (status === \"pending\") {\n          throw suspender;\n        } else if (status === \"error\") {\n          throw result;\n        } else if (status === \"success\") {\n          return result;\n        }\n      }\n    };\n  };","export const tvMetadata = [\n    {name: \"Breaking Bad\", score: \"9.5\", id: 1},\n    {name: \"Chernobyl\", score: \"9.4\", id: 2},\n    {name: \"Game of Thrones\", score: \"9.3\", id: 3},\n    {name: \"The Sopranos\", score: \"9.2\", id: 4},\n    {name: \"Sherlock\", score: \"9.1\", id: 5},\n    {name: \"Friends\", score: \"8.8\", id: 6},\n    {name: \"Seinfeld\", score: \"8.8\", id: 7},\n    {name: \"Black Mirror\", score: \"8.8\", id: 8},\n    {name: \"Narcos\", score: \"8.8\", id: 9},\n    {name: \"Stranger Things\", score: \"8.8\", id: 10},\n  ];\n  \n  export const tvData = {\n  1:   {name: \"Breaking Bad\", id: 1, description: \"A high school chemistry teacher diagnosed with inoperable lung cancer turns to manufacturing and selling methamphetamine in order to secure his family's future.\"},\n  2:   {name: \"Chernobyl\", id: 2, description: \"In April 1986, an explosion at the Chernobyl nuclear power plant in the Union of Soviet Socialist Republics becomes one of the world's worst man-made catastrophes.\"},\n  3:   {name: \"Game of Thrones\", id: 3, description: \"Nine noble families fight for control over the mythical lands of Westeros, while an ancient enemy returns after being dormant for thousands of years.\"},\n  4:   {name: \"The Sopranos\", id: 4, description: \"New Jersey mob boss Tony Soprano deals with personal and professional issues in his home and business life that affect his mental state, leading him to seek professional psychiatric counseling.\"},\n  5:   {name: \"Sherlock\", id: 5, description: \"A modern update finds the famous sleuth and his doctor partner solving crime in 21st century London.\"},\n  6:   {name: \"Friends\", id: 6, description: \"Follows the personal and professional lives of six twenty to thirty-something-year-old friends living in Manhattan.\"},\n  7:   {name: \"Seinfeld\", id: 7, description: \"The continuing misadventures of neurotic New York City stand-up comedian Jerry Seinfeld and his equally neurotic New York City friends.\"},\n  8:   {name: \"Black Mirror\", id: 8, description: \"An anthology series exploring a twisted, high-tech multiverse where humanity's greatest innovations and darkest instincts collide.\"},\n  9:   {name: \"Narcos\", id: 9, description: \"A chronicled look at the criminal exploits of Colombian drug lord Pablo Escobar, as well as the many other drug kingpins who plagued the country through the years.\"},\n  10:  {name: \"Stranger Things\", id: 10, description: \"When a young boy disappears, his mother, a police chief and his friends must confront terrifying supernatural forces in order to get him back.\"},\n  };\n  \n  export const comments = [\n    {\n        id: 1,\n        title: \"Worst show ever\",\n        text: \"booo\"\n    },\n    {\n        id: 2,\n        title: \"Best thing ever\",\n        text: \"wohoo\"\n    },\n    {\n        id: 3,\n        title: \"A must watch!\",\n        text: \"You won't regret it\"\n    },\n    {\n        id: 4,\n        title: \"Could be better\",\n        text: \"6/10\"\n    }\n  ];","import memoize from \"memoize-one\";\nimport { wrapPromise } from \"./wrapPromise\";\nimport { tvMetadata, tvData, comments } from \"./data\";\n\nconst API_TIMEOUT = 1000;\n\nconst tvMetadataApi = memoize(() => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(tvMetadata);\n    }, API_TIMEOUT);\n  });\n});\n\nconst tvDataApi = memoize(id => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(tvData[id]);\n    }, API_TIMEOUT + 1000);\n  });\n});\n\nconst commentsApi = memoize(id => {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve(comments.sort((a, b) => 0.5 - Math.random()));\n    }, API_TIMEOUT);\n  });\n});\n\nexport const getTvMetadataResource = memoize(() => {\n  return wrapPromise(tvMetadataApi());\n});\n\nexport const getTvDataResource = memoize(id => {\n  return wrapPromise(tvDataApi(id));\n});\n\nexport const getCommentsResource = memoize(id => {\n  return wrapPromise(commentsApi(id));\n});\n","import react from 'react';\nimport {atom} from 'recoil';\n\nexport const id = atom({\n  key: 'id',\n  default: 1,\n});\n\n","import React from \"react\";\nimport {useRecoilState} from 'recoil';\nimport { getTvMetadataResource } from \"./helpers/Api\";\nimport * as atoms from './Store/Atoms';\n\nexport const TvShowList = () => {\n  const [id, setId] = useRecoilState(atoms.id);\n\n  const onClick = (newId) => {\n    setId(newId)\n  };\n\n\n  const tvMetadata = getTvMetadataResource().read();\n  const tvshows = tvMetadata.map(item => (\n    <div className=\"item\" key={item.id} onClick={() => onClick(item.id)}>\n      <div className=\"name\">{item.name}</div>\n      <div className=\"score\">{item.score}</div>\n    </div>\n  ));\n  return <div className=\"tvshow-list\">{tvshows}</div>;\n};\n","import React, { Suspense } from \"react\";\nimport {useRecoilValue} from 'recoil';\nimport { getTvDataResource, getCommentsResource } from \"./helpers/Api\";\nimport { Spinner } from \"./Spinner\";\nimport * as atoms from './Store/Atoms';\n\n\nconst Comments = () => {\n\n  const id = useRecoilValue(atoms.id);\n\n  const commentsResource = getCommentsResource(id).read();\n  const comments = commentsResource.map(comment => (\n    <div className=\"comment\" key={comment.id}>\n      <h4>{comment.title}</h4>\n      <div className=\"text\">{comment.text}</div>\n    </div>\n  ));\n\n  return (\n    <div className=\"flex flex-col comments\">\n      <h3>Comments</h3>\n      {comments}\n    </div>\n  );\n};\n\nconst Details = () => {\n\n  const id = useRecoilValue(atoms.id);\n\n  const tvShowResource = getTvDataResource(id).read();\n  return (\n    <div className=\"flex\">\n      <div>\n        <h2>{tvShowResource.name}</h2>\n        <div className=\"details\">{tvShowResource.description}</div>\n      </div>\n      <div>\n        <img\n          src={`https://res.cloudinary.com/dqsubx7oc/image/upload/w_200/v1582908284/tv-shows/${id}.jpg`}\n          alt={tvShowResource.name}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport const TvShowDetails = () => {\n\n\n  return (\n    <div className=\"tvshow-details\">\n      <Suspense fallback={<Spinner />}>\n        <Details/>\n        <Suspense fallback={<Spinner />}>\n          <Comments/>\n        </Suspense>\n      </Suspense>\n    </div>\n  );\n\n  \n};\n","import React, { Suspense } from 'react';\nimport { Spinner } from './Spinner';\nimport { TvShowList } from './TvShowList';\nimport { TvShowDetails } from './TvShowDetails';\n\nexport default function Playground() {\n    return (\n        <div>\n            {/* <h1>Top 10 TV Shows of All Time {isPending && \"(loading)\"}</h1> */}\n            <h1>Top 10 TV Shows of All Time</h1>\n            <div className=\"flex\">\n                <Suspense fallback={<Spinner />}>\n                    {/* <TvShowList startTransition={startTransition}/> */}\n                    <TvShowList/>\n                </Suspense>\n                <Suspense fallback={<Spinner />}>\n                    <TvShowDetails/>\n                </Suspense>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport Playground from './Playground';\n\nexport default function PlaygroundSection() {\n    return (\n        <div>\n            <h2 id=\"hash-ancor\" className='section-title-left'>#Playground</h2>\n            <h3 className='section-subtitle'>This is where you can try out our dev tool</h3>\n            <div id='playground-section'>\n                <Playground />\n            </div>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/interpolate.67945ad3.gif\";","import React from 'react';\nimport ToggleGif from '../assets/interpolate.gif';\n\nexport default function TimeTravelSection() {\n    return (\n        <div id=\"toggle-div\" className=\"scroll-fade\">\n            {/* fix the formatting of this */}\n            <h2 className=\"section-title-right\">#ToggleMultipleGraphs</h2>\n            <div id=\"toggle-container\">\n                <div>\n                    <img src={ ToggleGif } alt=\"GIF demonstrating time travel dubugging\"/>\n                </div>\n                <div>\n                    <h2>Toggle multiple graphs depending on your taste</h2>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport Navbar from './Components/Navbar';\nimport LandingPage from './Components/LandingPage';\nimport TimeTravelSection from './Components/TimeTravelSection';\nimport Footer from './Components/Footer';\nimport PlaygroundSection from './Components/PlaygroundSection';\nimport ToggleSection from './Components/ToggleSection';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <LandingPage />\n      <TimeTravelSection />\n      <ToggleSection />\n      <PlaygroundSection />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport { RecoilRoot } from 'recoil';\nimport RecoilizeDebugger from 'recoilize';\n\nconst root = document.getElementById('root');\n\nReactDOM.render(\n  <RecoilRoot>\n    <RecoilizeDebugger />\n    <App />\n  </RecoilRoot>,\n  root\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();"],"sourceRoot":""}